[gd_scene load_steps=8 format=3 uid="uid://bfwmrrdbkprxv"]

[ext_resource type="Script" path="res://scenes/SideCloud.gd" id="1_8ghlf"]
[ext_resource type="Script" path="res://scenes/Sprite2D.gd" id="2_8tgub"]

[sub_resource type="WorldBoundaryShape2D" id="WorldBoundaryShape2D_8tsim"]

[sub_resource type="Shader" id="Shader_iu6hi"]
code = "shader_type canvas_item;

// Uniforms for customization
uniform float cloudscale = 1.1;
uniform float speed = 0.01;
uniform vec3 cloudColor = vec3(1.0, 1.0, 1.0); // Default to white, can be changed
uniform float cloudFluffiness = 0.6; // Adjust for fluffier clouds
uniform float cloudcover = 0.2;
uniform float cloudalpha = 8.0;
uniform mat2 m = mat2(vec2(1.6, 1.2), vec2(-1.2, 1.6));

// Add more functions and utilities here as needed

vec2 hash(vec2 p) {
    p = vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)));
    return -1.0 + 2.0 * fract(sin(p) * 43758.5453123);
}

float noise( in vec2 p ) {
    float K1 = 0.366025404; // (sqrt(3)-1)/2;
    float K2 = 0.211324865; // (3-sqrt(3))/6;
                vec2 i = floor(p + (p.x+p.y)*K1); 
    vec2 a = p - i + (i.x+i.y)*K2;
    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));
    vec2 b = a - o + K2;
                vec2 c = a - 1.0 + 2.0*K2;
    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );
                vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));
    return dot(n, vec3(70.0));       
}


float fbm(vec2 n) {
                float total = 0.0, amplitude = 0.1;
                for (int i = 0; i < 7; i++) {
                               total += noise(n) * amplitude;
                               n = m * n;
                               amplitude *= 0.4;
                }
                return total;
}

void fragment() {
    vec2 res = 1.0 / SCREEN_PIXEL_SIZE;
    vec2 p = FRAGCOORD.xy / res.xy;
    vec2 uv = p * vec2(res.x / res.y, 1.0); // Adjust UV coordinates for 2:1 isometric view

    // Access the texture color and alpha at the fragment location
    vec4 texColor = texture(TEXTURE, UV);
    float spriteAlpha = texColor.a; // Alpha of the underlying sprite

    float time = TIME * speed;
    float q = fbm(uv * cloudscale * 0.5);

    // Cloud movement only affects horizontal direction
    uv.x += q - time;

    float r = 0.0;
    float weight = 0.8;
    for (int i = 0; i < 8; i++) {
        r += abs(weight * noise(uv));
        uv = m * uv + vec2(time, 0.0); // Horizontal movement
        weight *= 0.7;
    }

    float f = 0.0;
    uv = p * vec2(res.x / res.y, 1.0);
    uv.x += q - time;

    weight = cloudFluffiness;
    for (int i = 0; i < 8; i++) {
        f += weight * noise(uv);
        uv = m * uv + vec2(time, 0.0);
        weight *= 0.6;
    }

    f *= r + f;
    f = cloudcover + cloudalpha * f * r;

    // Blend cloud alpha with sprite alpha
    float combinedAlpha = clamp(f, 0.0, 1.0) * spriteAlpha;

    vec4 cloudColorVec = vec4(cloudColor, combinedAlpha); // Set cloud color and combined alpha
    COLOR = cloudColorVec;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_clgk1"]
shader = SubResource("Shader_iu6hi")
shader_parameter/cloudscale = 1.1
shader_parameter/speed = 0.01
shader_parameter/cloudColor = Vector3(1, 1, 1)
shader_parameter/cloudFluffiness = 0.6
shader_parameter/cloudcover = 0.2
shader_parameter/cloudalpha = 8.0
shader_parameter/m = Transform2D(1.6, -1.2, 1.2, 1.6, 0, 0)

[sub_resource type="Gradient" id="Gradient_ugym2"]
offsets = PackedFloat32Array(0.970779, 1)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_oyeuv"]
gradient = SubResource("Gradient_ugym2")

[node name="SideCloudBottom" type="Area2D"]
position = Vector2(-2000, 1000)
rotation = 0.462512
collision_layer = 2
collision_mask = 2
script = ExtResource("1_8ghlf")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("WorldBoundaryShape2D_8tsim")

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_clgk1")
position = Vector2(2.08165e-12, 1280.15)
rotation = 4.71239
scale = Vector2(10, 40000)
texture = SubResource("GradientTexture1D_oyeuv")
script = ExtResource("2_8tgub")

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_body_exited"]
